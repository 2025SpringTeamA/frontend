name: Deploy Next.js to S3 and CloudFront

on:
  workflow_run:
    workflows: ["Build and Test Next.js Frontend"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:
    inputs:
      run_id:
        required: false
        type: string

jobs:
  deploy-to-s3:
    name: Deploy to S3 and Invalidate CloudFront
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'workflow_dispatch') || (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main') }}
    environment: production

    steps:
      - name: Get artifact ID
        id: get_artifact
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const inputRunId = "${{ github.event.inputs.run_id || '' }}";
            let runId;

            if (inputRunId) {
              runId = parseInt(inputRunId);
            } else if (context.payload.workflow_run) {
              runId = context.payload.workflow_run.id;
            } else {
              const runs = await github.rest.actions.listWorkflowRunsForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: "main",
                status: "success",
                per_page: 1
              });
              if (runs.data.total_count === 0) {
                core.setFailed("成功した workflow run が見つかりません。");
                return;
              }
              runId = runs.data.workflow_runs[0].id;
            }

            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId,
            });

            const artifact = artifacts.data.artifacts.find(a => a.name === "frontend-build");
            if (!artifact) {
              core.setFailed("Artifact 'frontend-build' が見つかりません。");
              return;
            }

            core.setOutput("artifact-id", artifact.id);

      - name: Download artifact zip
        run: |
          curl -L \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${{ steps.get_artifact.outputs.artifact-id }}/zip \
            -o artifact.zip

      - name: Unzip artifact
        run: unzip artifact.zip -d out

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Deploy to S3
        run: aws s3 sync out s3://saburo-frontend --delete

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"